<?xml version="1.0" encoding="UTF-8"?>
<document>
    <properties>
        <title>Librairie notifygru</title>
    </properties>
    <body>
        <section name="Librairie notifygru">
            <subsection name="Introduction">
                <p>
                Cette librairie fournit des services pour envoyer des notifications Ã  la GRU. 
                </p>
            </subsection>
            <subsection name="Services">
                <p>
                Le service principal est <code>fr.paris.lutece.plugins.librarynotifygru.services.NotificationService</code>, qui envoie un objet <code>fr.paris.lutece.plugins.grubusiness.business.notification.Notification</code> (voir la javadoc pour plus de d&amp;eacute;tails sur cet objet).
                </p>
                <p>
                Il requiert une impl&amp;eacute;mentation de <code>fr.paris.lutece.plugins.librarynotifygru.services.INotificationTransportProvider</code> pour d&amp;eacute;finir le transport HTTP.
                Deux impl&amp;eacute;mentations de cette interface sont pr&amp;eacute;sentes dans cette librairie :
                <ul>
                    <li><code>fr.paris.lutece.plugins.librarynotifygru.rs.service.NotificationTransportApiManagerRest</code>, qui utilise l'ApiManager WSO2 pour s&amp;eacute;curiser les requ&amp;ecirc;tes &amp;agrave; l'API (en utilisant des tokens)</li>
                    <li><code>fr.paris.lutece.plugins.librarynotifygru.rs.service.NotificationTransportRest</code>, qui utilise des requ&amp;ecirc;tes simples</li>
                </ul>
                </p>
                <p>
                Ces deux impl&amp;eacute;mentations ont besoin de la d&amp;eacute;finition de l'URL vers le service de notification. Cette URL est stock&amp;eacute;e dans l'attribut <code>notificationEndPoint</code>.
                L'impl&amp;eacute;mentation <code>NotificationTransportApiManagerRest</code> a besoin de propri&amp;eacute;t&amp;eacute;s suppl&amp;eacute;mentaires.                
                </p>
            </subsection>
            <subsection name="Configuration en utilisant le contexte Spring">
                <p>
                Premi&amp;egrave;rement, d&amp;eacute;finir le bean pour le transport HTTP &amp;agrave; utiliser :
                <ul>
                    <li>renseigner la propri&amp;eacute;t&amp;eacute; pour l'URL pointant vers le service de notification</li>
                    <li>renseigner les autres propri&amp;eacute;t&amp;eacute;s si le transport HTTP <code>NotificationTransportApiManagerRest</code> est utilis&amp;eacute;</li>
                </ul>
                </p>
                <p>
                Ensuite, d&amp;eacute;finir le bean pour le service <code>NotificationService</code> :
                <ul>
                    <li>comme argument de constructeur, faire r&amp;eacute;f&amp;eacute;rence au bean pour le transport HTTP</li>
                </ul>
                </p>
                <p>
                Voici un exemple de configuration Spring avec le transport HTTP <code>NotificationTransportRest</code> :
                    <div class="source">
                        <pre>
&lt;bean id="lib-notifygru.simpleTransport" class="fr.paris.lutece.plugins.librarynotifygru.rs.service.NotificationTransportRest"&gt;
    &lt;property name="notificationEndPoint"&gt;
        &lt;value&gt;http://mydomain.com/url/to/notification&lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;
&lt;bean id="lib-notifygru.notificationService" class="fr.paris.lutece.plugins.librarynotifygru.services.NotificationService"&gt;
    &lt;constructor-arg ref="lib-notifygru.simpleTransport"/&gt;
&lt;/bean&gt;
                        </pre>
                    </div>
                </p>
                <p>
                Voici un exemple de configuration Spring avec le transport HTTP <code>NotificationTransportApiManagerRest</code> :
                    <div class="source">
                        <pre>
&lt;bean id="lib-notifygru.apiManagerTransport" class="fr.paris.lutece.plugins.librarynotifygru.rs.service.NotificationTransportApiManagerRest"&gt;
    &lt;property name="notificationEndPoint"&gt;
        &lt;value&gt;http://mydomain.com/url/to/apimanager/api/notification&lt;/value&gt;
    &lt;/property&gt;
    &lt;property name="apiManagerEndPoint"&gt;
        &lt;value&gt;http://mydomain.com/url/to/apimanager/token&lt;/value&gt;
    &lt;/property&gt;
    &lt;property name="apiManagerCredentials"&gt;
        &lt;value&gt;your_private_key&lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;
&lt;bean id="lib-notifygru.notificationService" class="fr.paris.lutece.plugins.librarynotifygru.services.NotificationService"&gt;
    &lt;constructor-arg ref="lib-notifygru.apiManagerTransport"/&gt;
&lt;/bean&gt;
                        </pre>
                    </div>
                </p>
            </subsection>
            <subsection name="Configuration dans le code Java">
                <p>
                Le service peut &amp;ecirc;tre directement cr&amp;eacute;&amp;eacute; dans le code Java. Voici un exemple avec le transport HTTP <code>NotificationTransportApiManagerRest</code> (le m&amp;ecirc;me m&amp;eacute;canisme peut &amp;ecirc;tre appliqu&amp;eacute; pour le transport HTTP <code>NotificationTransportRest</code>).
                </p>
                <p>
                Premi&amp;egrave;rement, d&amp;eacute;finir les cl&amp;eacute;s suivantes dans un fichier de propri&amp;eacute;t&amp;eacute;s :
                    <div class="source">
                        <pre>
myplugin.endpoint.notification=http://mydomain.com/url/to/apimanager/api/notification
myplugin.endpoint.token=http://mydomain.com/url/to/apimanager/token
myplugin.apimanager.credentials=your_private_key
                        </pre>  
                    </div>
                </p>
                <p>
                Ensuite, ajouter le code suivant dans le code Java :
                    <div class="source">
                        <pre>
private static final String PROPERTY_ENDPOINT_NOTIFICATION = "myplugin.endpoint.notification";
private static final String PROPERTY_ENDPOINT_TOKEN = "myplugin.endpoint.token";
private static final String PROPERTY_APIMANAGER_CREDENTIALS = "myplugin.apimanager.credentials";
...
NotificationTransportApiManagerRest apiManagerTransport = new NotificationTransportApiManagerRest(  );
apiManagerTransport.setNotificationEndPoint( AppPropertiesService.getProperty( PROPERTY_ENDPOINT_NOTIFICATION ) );
apiManagerTransport.setApiManagerEndPoint( AppPropertiesService.getProperty( PROPERTY_ENDPOINT_TOKEN ) );
apiManagerTransport.setApiManagerCredentials( AppPropertiesService.getProperty( PROPERTY_APIMANAGER_CREDENTIALS ) );

NotificationService notificationService = new NotificationService( apiManagerTransport );
                        </pre>
                    </div>
                </p>
            </subsection>
        </section>
    </body>
</document>

