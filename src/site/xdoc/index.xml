<?xml version="1.0" encoding="UTF-8"?>
<document>
    <properties>
        <title>Library notifygru</title>
    </properties>
    <body>
        <section name="Library notifygru">
            <subsection name="Introduction">
                <p>
                This library provides services to send notifications to the GRU.
                </p>
            </subsection>
            <subsection name="Services">
                <p>
                The main service is <code>fr.paris.lutece.plugins.librarynotifygru.services.NotificationService</code> which consumes a <code>fr.paris.lutece.plugins.grubusiness.business.notification.Notification</code> object (see javadoc for details on the object).
                </p>
                <p>
                It requires an implementation of <code>fr.paris.lutece.plugins.librarynotifygru.services.INotificationTransportProvider</code> to define the HTTP transport.
                Two implementations of this interface are provided in the library :
                <ul>
                    <li><code>fr.paris.lutece.plugins.librarynotifygru.rs.service.NotificationTransportApiManagerRest</code>, which uses ApiManager WSO2 in order to secure requests to the API (by using tokens)</li>
                    <li><code>fr.paris.lutece.plugins.librarynotifygru.rs.service.NotificationTransportRest</code>, which uses simple requests</li>
                </ul>
                </p>
                <p>
                Both implementations require URL definition of the notification service end point. This URL is stored in the attribute <code>notificationEndPoint</code>.
                The <code>NotificationTransportApiManagerRest</code> implementation requires extra properties.                
                </p>
            </subsection>
            <subsection name="Configuration using Spring context">
                <p>
                First, define the bean for the HTTP transport you want to use:
                <ul>
                    <li>set the property for the URL of the notification service end point</li>
                    <li>set other properties if using the HTTP transport <code>NotificationTransportApiManagerRest</code></li>
                </ul>
                </p>
                <p>
                Then, define the bean for the service <code>NotificationService</code>:
                <ul>
                    <li>as a constructor argument, refer to the bean for HTTP transport</li>
                </ul>
                </p>
                <p>
                Here is an example of Spring configuration with the HTTP transport <code>NotificationTransportRest</code>:
                    <div class="source">
                        <pre>
&lt;bean id="lib-notifygru.simpleTransport" class="fr.paris.lutece.plugins.librarynotifygru.rs.service.NotificationTransportRest"&gt;
    &lt;property name="notificationEndPoint"&gt;
        &lt;value&gt;http://mydomain.com/url/to/notification&lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;
&lt;bean id="lib-notifygru.notificationService" class="fr.paris.lutece.plugins.librarynotifygru.services.NotificationService"&gt;
    &lt;constructor-arg ref="lib-notifygru.simpleTransport"/&gt;
&lt;/bean&gt;
                        </pre>
                    </div>
                </p>
                <p>
                Here is an example of Spring configuration with the HTTP transport <code>NotificationTransportApiManagerRest</code>:
                    <div class="source">
                        <pre>
&lt;bean id="lib-notifygru.apiManagerTransport" class="fr.paris.lutece.plugins.librarynotifygru.rs.service.NotificationTransportApiManagerRest"&gt;
    &lt;property name="notificationEndPoint"&gt;
        &lt;value&gt;http://mydomain.com/url/to/apimanager/api/notification&lt;/value&gt;
    &lt;/property&gt;
    &lt;property name="apiManagerEndPoint"&gt;
        &lt;value&gt;http://mydomain.com/url/to/apimanager/token&lt;/value&gt;
    &lt;/property&gt;
    &lt;property name="apiManagerCredentials"&gt;
        &lt;value&gt;your_private_key&lt;/value&gt;
    &lt;/property&gt;
&lt;/bean&gt;
&lt;bean id="lib-notifygru.notificationService" class="fr.paris.lutece.plugins.librarynotifygru.services.NotificationService"&gt;
    &lt;constructor-arg ref="lib-notifygru.apiManagerTransport"/&gt;
&lt;/bean&gt;
                        </pre>
                    </div>
                </p>
            </subsection>
            <subsection name="Configuration in Java code">
                <p>
                The service can directly be created in the Java code. Here is an example with the HTTP transport <code>NotificationTransportApiManagerRest</code> (the same mechanism can be applied for the HTTP transport <code>NotificationTransportRest</code>).
                </p>
                <p>
                First, define the following keys in a properties file:
                    <div class="source">
                        <pre>
myplugin.endpoint.notification=http://mydomain.com/url/to/apimanager/api/notification
myplugin.endpoint.token=http://mydomain.com/url/to/apimanager/token
myplugin.apimanager.credentials=your_private_key
                        </pre>  
                    </div>
                </p>
                <p>
                Then, add the following code in the Java code:
                    <div class="source">
                        <pre>
private static final String PROPERTY_ENDPOINT_NOTIFICATION = "myplugin.endpoint.notification";
private static final String PROPERTY_ENDPOINT_TOKEN = "myplugin.endpoint.token";
private static final String PROPERTY_APIMANAGER_CREDENTIALS = "myplugin.apimanager.credentials";
...
NotificationTransportApiManagerRest apiManagerTransport = new NotificationTransportApiManagerRest(  );
apiManagerTransport.setNotificationEndPoint( AppPropertiesService.getProperty( PROPERTY_ENDPOINT_NOTIFICATION ) );
apiManagerTransport.setApiManagerEndPoint( AppPropertiesService.getProperty( PROPERTY_ENDPOINT_TOKEN ) );
apiManagerTransport.setApiManagerCredentials( AppPropertiesService.getProperty( PROPERTY_APIMANAGER_CREDENTIALS ) );

NotificationService notificationService = new NotificationService( apiManagerTransport );
                        </pre>
                    </div>
                </p>
            </subsection>
        </section>
    </body>
</document>

